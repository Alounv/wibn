datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id      String   @id @default(cuid())
  email   String   @unique
  periods Period[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password    Password?
  token       Token?
  groups      UsersOnGroups[]
  adminGroups Group[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Token {
  refresh String?
  access  String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Group {
  id          String   @id @default(cuid())
  name        String
  description String
  periods     Period[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  admin   User   @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adminId String

  users UsersOnGroups[]
}

model UsersOnGroups {
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     String
  group      Group    @relation(fields: [groupId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  groupId    String
  assignedAt DateTime @default(now())

  @@id([userId, groupId])
}

model Period {
  id      String  @id @default(cuid())
  period  String  @unique
  Group   Group?  @relation(fields: [groupId], references: [id])
  User    User?   @relation(fields: [userId], references: [id])
  userId  String?
  groupId String?
}
